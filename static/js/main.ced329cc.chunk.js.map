{"version":3,"sources":["Components/Form.jsx","Components/ToDoItems.jsx","Components/ToDoList.jsx","App.js","index.js"],"names":["Form","props","type","name","className","autoComplete","onChange","e","setInput","target","value","Input","onClick","preventDefault","setTodos","OldVal","text","completed","id","Math","random","setStatus","ToDoItems","Todo","item","Todos","map","filter","ToDoList","FilterToDo","i","App","useState","Status","setFilterTodo","useEffect","getLocalTodos","filterHandler","saveLocalTodos","console","log","localStorage","setItem","JSON","stringify","getItem","LocalTodos","parse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ced329cc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = (props)=> {\r\n\r\n    const InputHandler = (e)=>{\r\n       props.setInput(e.target.value);\r\n    }\r\n    const submitHandler = (e)=>{\r\n       e.preventDefault();\r\n       props.setTodos((OldVal)=>{\r\n         return [\r\n            ...OldVal ,\r\n            {text:props.Input , completed:false , id:Math.random() * 1000 }  \r\n         ]   \r\n       })\r\n       props.setInput(\"\");\r\n     }\r\n    const statusHandler = (e)=>{\r\n       props.setStatus(e.target.value);\r\n    } \r\n    return (\r\n       <form >\r\n           <input type=\"text\" name=\"input-field\"  className=\"todo-input\" autoComplete=\"off\" onChange={InputHandler} value={props.Input} />\r\n           <button className=\"todo-button\" type=\"submit\" onClick={submitHandler} >\r\n             <i className=\"fas fa-plus-square\"></i>\r\n           </button>\r\n           <div className=\"select\">\r\n              <select name=\"filter\" className='filter-todo' onChange={statusHandler} >\r\n                  <option value=\"all\">All</option>\r\n                  <option value=\"completed\">Completed</option>\r\n                  <option value=\"uncompleted\">Uncompleted</option>\r\n              </select>\r\n           </div>\r\n\r\n       </form>\r\n\r\n)}\r\n\r\nexport default Form;\r\n","import React, { useState } from 'react';\r\n\r\nconst  ToDoItems = (props)=> {\r\n\r\n    const deleteHandler = ()=>{\r\n        props.setTodos(\r\n            props.Todos.filter((item)=>{\r\n                  return    props.Todo.id !== item.id\r\n            })\r\n        ) \r\n               \r\n    }\r\n const completeHandler = ()=>{\r\n     props.setTodos(\r\n        props.Todos.map((item)=>{\r\n           if(item.id === props.Todo.id){\r\n               return {\r\n                   ...item,\r\n                   completed : !item.completed\r\n               }\r\n           }\r\n         return item;\r\n        })\r\n     )}\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item   ${props.Todo.completed ? \"completed\" : \"\"}`}>{props.item}</li>\r\n            <button className=\"complete-btn\" onClick={completeHandler}>\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button className=\"trash-btn \" onClick={deleteHandler}>\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoItems;\r\n","import React from 'react';\r\nimport ToDoItems from './ToDoItems';\r\n\r\nconst ToDoList = (props)=> {\r\n    return (\r\n        <div className=\"todo-container\"> \r\n            <ul className='todo-list'>\r\n                {\r\n                    props.FilterToDo.map((item , i)=>{\r\n                     return   <ToDoItems Todo ={item}  Todos={props.Todos} setTodos={props.setTodos} key={item.id}  item={item.text}  />\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList;\r\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Form from './Components/Form';\nimport ToDoList from './Components/ToDoList';\n\nfunction App() {\n  const [Input , setInput] = useState(\"\");\n  const [Todos , setTodos] = useState([]);\n  const [Status , setStatus] = useState(\"all\");\n  const [FilterToDo , setFilterTodo] = useState([]);\n\n  useEffect(()=>{\n    getLocalTodos();\n},[]);\n\n  useEffect(()=>{\n    filterHandler();\n    saveLocalTodos();\n    console.log('first time');\n  },[Todos,Status]);\n  \n  const saveLocalTodos = ()=>{\n    localStorage.setItem('todos',JSON.stringify(Todos));\n  }\n  const getLocalTodos = ()=>{\n    if(localStorage.getItem('todos') === null){\n      localStorage.setItem('todos', JSON.stringify([]));\n    }else{\n     let LocalTodos = JSON.parse(localStorage.getItem('todos'));\n     setTodos(LocalTodos);\n    }\n  }\n\n  const filterHandler  = ()=>{\n    switch(Status){\n      case \"completed\":\n        setFilterTodo(Todos.filter(item=> item.completed === true ))\n        break;\n      case \"uncompleted\":\n        setFilterTodo(Todos.filter(item=> item.completed === false ))   \n        break;\n      default:\n        setFilterTodo(Todos);\n        break;\n        }\n     \n      }\n   return (\n    <div className=\"App\">\n      <header>\n        <h1>TODO List </h1>\n      </header>\n      <Form Todos={Todos} setTodos={setTodos} Input={Input} setInput={setInput}\n      setStatus={setStatus} />\n      <ToDoList Todos = {Todos} setTodos = {setTodos} FilterToDo={FilterToDo} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( <App />,document.getElementById('root'));\n\n"],"sourceRoot":""}